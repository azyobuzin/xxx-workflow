name: Build Image

on:
  workflow_dispatch:
    inputs:
      branch:
        description: Branch
        required: true
        default: xxx

jobs:
  build-fe:
    name: Build Frontend
    runs-on: ubuntu-20.04
    env:
      NODE_ENV: production
    steps:
      - name: git clone
        run: git clone --depth 1 --no-tags --branch ${{ github.event.inputs.branch }} https://git.azyobuzi.net/xxx/pleroma-fe.git
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: yarn install
        run: yarn install --pure-lockfile --production=false
        working-directory: pleroma-fe
      - name: yarn build
        run: yarn build
        working-directory: pleroma-fe
      - uses: actions/upload-artifact@v2
        with:
          name: fe
          path: pleroma-fe/dist
          if-no-files-found: error

  build-image:
    name: Build Image
    needs: [build-fe]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Checkout backend
        run: git clone --depth 1 --no-tags --branch ${{ github.event.inputs.branch }} https://git.azyobuzi.net/xxx/pleroma.git
      - uses: actions/download-artifact@v2
      - name: docker login
        run: echo ${{ secrets.DOCKER_TOKEN }} | docker login -u azyobuzin --password-stdin
      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v1.3.0
      - name: Cache layers
        uses: actions/cache@v2
        with:
          path: cache/layers
          key: layers-${{ github.event.inputs.branch }}
      - name: docker buildx build
        run: |
          docker buildx build --progress=plain --push \
          -t azyobuzin/pleroma:${{ github.event.inputs.branch }} \
          --platform=linux/amd64,linux/arm64 \
          --cache-from=type=local,src=./cache/layers \
          --cache-to=type=local,dest=./cache/layers .
